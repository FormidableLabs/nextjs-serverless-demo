{
  "name": "nextjs-serverless-demo",
  "version": "0.0.1",
  "description": "Simple Next.js on Lambda via Serverless demo",
  "main": "index.js",
  "repository": "https://github.com/FormidableLabs/nextjs-serverless-demo",
  "author": "Ryan Roemer <ryan.roemer@formidable.com>",
  "license": "MIT",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "clean": "rm -rf .next",
    "build": "next build",
    "start": "next start",
    "env": "echo export STAGE=${STAGE:-localdev}; echo export SERVICE_NAME=nextjs-serverless; echo export AWS_REGION=${AWS_REGION:-us-east-1}; echo export AWS_XRAY_CONTEXT_MISSING=LOG_ERROR",
    "cf:_params": "eval $(yarn -s env) && echo --parameters ParameterKey=Stage,ParameterValue=${STAGE} ParameterKey=ServiceName,ParameterValue=${SERVICE_NAME}",
    "cf:bootstrap:_stack": "eval $(yarn -s env) && echo --region ${AWS_REGION} --stack-name cf-${SERVICE_NAME}-${STAGE}-bootstrap",
    "cf:bootstrap:_tmpl": "echo --template-body file://aws/bootstrap.yml ",
    "cf:bootstrap:create": "aws cloudformation create-stack --capabilities CAPABILITY_NAMED_IAM $(yarn -s cf:bootstrap:_tmpl) $(yarn -s cf:bootstrap:_stack) $(yarn -s cf:_params)",
    "cf:bootstrap:update": "aws cloudformation update-stack --capabilities CAPABILITY_NAMED_IAM $(yarn -s cf:bootstrap:_tmpl) $(yarn -s cf:bootstrap:_stack) $(yarn -s cf:_params)",
    "cf:bootstrap:status": "aws cloudformation describe-stacks --query 'Stacks[0].StackStatus' $(yarn -s cf:bootstrap:_stack)",
    "cf:bootstrap:_get-bucket-versions": "eval $(yarn -s env) && aws s3api list-object-versions --bucket=\"cf-${SERVICE_NAME}-${STAGE}-terraform-state\" --output=json --query=\"{Objects: Versions[].{Key:Key,VersionId:VersionId}}\"",
    "cf:bootstrap:_empty-bucket": "eval $(yarn -s env) && aws s3api delete-objects --bucket=\"cf-${SERVICE_NAME}-${STAGE}-terraform-state\" --delete=\"$(yarn -s cf:bootstrap:_get-bucket-versions)\" || echo \"No objects deleted/found.\"",
    "cf:bootstrap:_delete-stack": "eval $(yarn -s env) && aws cloudformation delete-stack $(yarn -s cf:bootstrap:_stack)",
    "cf:bootstrap:_delete": "eval $(yarn -s env) && yarn cf:bootstrap:_empty-bucket && yarn cf:bootstrap:_delete-stack",
    "tf:service:_backend": "eval $(yarn -s env) && echo -backend-config=\"bucket=cf-${SERVICE_NAME}-${STAGE}-terraform-state\" -backend-config=\"dynamodb_table=cf-${SERVICE_NAME}-${STAGE}-terraform-locks\" -backend-config=\"region=${AWS_REGION}\" ",
    "tf:terraform": "eval $(yarn -s env) && cd terraform && terraform",
    "tf:service:_vars": "eval $(yarn -s env) && echo -var \"region=${AWS_REGION}\" -var \"service_name=${SERVICE_NAME}\" -var \"stage=${STAGE}\" ",
    "tf:service:init": "yarn run tf:terraform init $(yarn -s tf:service:_backend) $(yarn -s tf:service:_vars)",
    "tf:service:plan": "yarn run tf:terraform plan $(yarn -s tf:service:_vars)",
    "tf:service:apply": "yarn run tf:terraform apply $(yarn -s tf:service:_vars)",
    "tf:service:_delete": "yarn run tf:terraform destroy $(yarn -s tf:service:_vars)",
    "lambda:sls": "eval $(yarn -s env) && sls -s ${STAGE}",
    "lambda:localdev": "yarn run lambda:sls offline start --httpPort ${SERVER_PORT:-4000} --host ${SERVER_HOST:-0.0.0.0}",
    "lambda:deploy": "yarn run lambda:sls deploy",
    "lambda:info": "yarn run lambda:sls info",
    "lambda:logs": "yarn run lambda:sls logs",
    "lambda:metrics": "yarn run lambda:sls metrics",
    "lambda:rollback": "yarn run lambda:sls rollback",
    "lambda:_delete": "yarn run lambda:sls remove"
  },
  "dependencies": {
    "date-fns": "^2.11.1",
    "express": "^4.17.1",
    "gray-matter": "^4.0.2",
    "next": "^10.0.0",
    "next-aws-lambda": "^2.5.1-alpha.0",
    "react": "17.0.1",
    "react-dom": "17.0.1",
    "remark": "^12.0.0",
    "remark-html": "^12.0.0",
    "serverless-http": "^2.7.0"
  },
  "devDependencies": {
    "serverless": "^2.21.1",
    "serverless-jetpack": "^0.10.7",
    "serverless-offline": "^6.8.0"
  }
}
